import{_ as t,c as e,o,ae as r}from"./chunks/framework.Cn4FPLDc.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"api/Material.md","filePath":"api/Material.md"}'),l={name:"api/Material.md"};function i(n,a,d,s,c,p){return o(),e("div",null,[...a[0]||(a[0]=[r('<h2 id="classes" tabindex="-1">Classes <a class="header-anchor" href="#classes" aria-label="Permalink to &quot;Classes&quot;">​</a></h2><dl><dt><a href="#Material">Material</a></dt><dd><p>This serve as the base class for all materials.</p></dd></dl><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h2><dl><dt><a href="#applyToContext2D">applyToContext2D(ctx)</a> ⇒ <code>void</code></dt><dd><p>Apply the material configuration to the given canvas 2D context.</p></dd></dl><p><a name="Material"></a></p><h2 id="material" tabindex="-1">Material <a class="header-anchor" href="#material" aria-label="Permalink to &quot;Material&quot;">​</a></h2><p>This serve as the base class for all materials.</p><p><strong>Kind</strong>: global class<br><a name="Material+Material"></a></p><h3 id="material-material" tabindex="-1">material.Material <a class="header-anchor" href="#material-material" aria-label="Permalink to &quot;material.Material&quot;">​</a></h3><p><strong>Kind</strong>: instance class of <a href="#Material"><code>Material</code></a><br><a name="applyToContext2D"></a></p><h2 id="applytocontext2d-ctx-⇒-void" tabindex="-1">applyToContext2D(ctx) ⇒ <code>void</code> <a class="header-anchor" href="#applytocontext2d-ctx-⇒-void" aria-label="Permalink to &quot;applyToContext2D(ctx) ⇒ &lt;code&gt;void&lt;/code&gt;&quot;">​</a></h2><p>Apply the material configuration to the given canvas 2D context.</p><p><strong>Kind</strong>: global function</p><table tabindex="0"><thead><tr><th>Param</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>ctx</td><td><code>CanvasRenderingContext2D</code></td><td>The canvas 2D rendering context to draw onto</td></tr></tbody></table>',14)])])}const x=t(l,[["render",i]]);export{m as __pageData,x as default};
