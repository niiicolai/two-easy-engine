import{_ as t,c as a,o as n,ae as r}from"./chunks/framework.Cn4FPLDc.js";const i="/two-easy-engine/images/logo.png",u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"index.md","filePath":"index.md"}'),o={name:"index.md"};function s(l,e,c,p,g,d){return n(),a("div",null,[...e[0]||(e[0]=[r('<div class="warning custom-block"><p class="custom-block-title">WARNING</p><p><strong>⚠️ Experimental API:</strong> TwoEasyEngine is a very new project. The API is still evolving and may change in the future, especially as support for other rendering contexts is added.</p></div><p><img src="'+i+'" alt="TwoEasyEngine Logo" width="360" style="flex-shrink:0;border-radius:1rem;margin:auto;"></p><p><strong>TwoEasyEngine</strong> is a lightweight 2D rendering library built on HTML5 Canvas. It provides a clean, object-oriented API for creating interactive scenes, managing meshes, controlling cameras, and animating objects, with minimal setup.</p><h3 id="features" tabindex="-1">Features <a class="header-anchor" href="#features" aria-label="Permalink to &quot;Features&quot;">​</a></h3><ul><li><strong>Meshes with geometry and materials</strong>: Easily create shapes like Rectangles and Circles.</li><li><strong>Texture2D support</strong>: Use images in materials to display patterns beyond solid colors.</li><li><strong>Vector transformations</strong>: Manipulate position, rotation, and scale with ease.</li><li><strong>Camera2D support</strong>: Control position, rotation, and zoom for dynamic scenes.</li><li><strong>Scene management</strong>: Organize and render multiple 2D objects efficiently.</li><li><strong>Offscreen canvas support</strong>: Use the library with an offscreen canvas in a Worker thread.</li><li><strong>Simple animation loop</strong>: Built-in <code>requestAnimationFrame</code> wrapper for easy management.</li><li><strong>TypeScript ready</strong>: Modern JavaScript with type declarations for IDE autocompletion.</li></ul>',5)])])}const f=t(o,[["render",s]]);export{u as __pageData,f as default};
