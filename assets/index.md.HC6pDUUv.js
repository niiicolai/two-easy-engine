import{_ as t,c as a,o as r,ae as n}from"./chunks/framework.C4y2S-A3.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"index.md","filePath":"index.md"}'),i={name:"index.md"};function s(o,e,l,c,d,p){return r(),a("div",null,[...e[0]||(e[0]=[n('<div class="warning custom-block"><p class="custom-block-title">WARNING</p><p><strong>⚠️ Experimental API:</strong> TwoEasyEngine is a very new project. The API is still evolving and may change in the future, especially as support for other rendering contexts is added.</p></div><iframe src="/two-easy-engine/demos/introduction.html" width="100%" height="400px" style="border:1px solid #ccc;"></iframe><p><strong>TwoEasyEngine</strong> is a lightweight 2D rendering library built on HTML5 Canvas. It provides a clean, object-oriented API for creating interactive scenes, managing meshes, controlling cameras, and animating objects, with minimal setup.</p><p>It can be used both in the browser for interactive graphics and in MCP server projects to generate canvas drawings server-side, making it versatile for client-side visuals and AI-driven server workflows alike.</p><h3 id="features" tabindex="-1">Features <a class="header-anchor" href="#features" aria-label="Permalink to &quot;Features&quot;">​</a></h3><ul><li><strong>Meshes with geometry and materials</strong>: Easily create shapes like Rectangles and Circles.</li><li><strong>Texture2D support</strong>: Use images in materials to display patterns beyond solid colors.</li><li><strong>Vector transformations</strong>: Manipulate position, rotation, and scale with ease.</li><li><strong>Camera2D support</strong>: Control position, rotation, and zoom for dynamic scenes.</li><li><strong>Scene management</strong>: Organize and render multiple 2D objects efficiently.</li><li><strong>Offscreen canvas support</strong>: Use the library with an offscreen canvas in a Worker thread.</li><li><strong>Simple animation loop</strong>: Built-in <code>requestAnimationFrame</code> wrapper for easy management.</li><li><strong>TypeScript ready</strong>: Modern JavaScript with type declarations for IDE autocompletion.</li></ul>',6)])])}const u=t(i,[["render",s]]);export{m as __pageData,u as default};
