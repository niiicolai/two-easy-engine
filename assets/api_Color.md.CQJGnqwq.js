import{_ as r,c as t,o as a,ae as e}from"./chunks/framework.Cn4FPLDc.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"api/Color.md","filePath":"api/Color.md"}'),l={name:"api/Color.md"};function n(s,o,i,c,d,h){return a(),t("div",null,[...o[0]||(o[0]=[e('<h2 id="classes" tabindex="-1">Classes <a class="header-anchor" href="#classes" aria-label="Permalink to &quot;Classes&quot;">​</a></h2><dl><dt><a href="#Color">Color</a></dt><dd><p>The base color class</p></dd></dl><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h2><dl><dt><a href="#toString">toString()</a> ⇒ <code>string</code></dt><dd><p>Returns the colorStr property</p></dd></dl><p><a name="Color"></a></p><h2 id="color" tabindex="-1">Color <a class="header-anchor" href="#color" aria-label="Permalink to &quot;Color&quot;">​</a></h2><p>The base color class</p><p><strong>Kind</strong>: global class</p><ul><li><a href="#Color">Color</a><ul><li><a href="#Color+Color">.Color</a><ul><li><a href="#new_Color+Color_new">new exports.Color(colorStr)</a></li></ul></li></ul></li></ul><p><a name="Color+Color"></a></p><h3 id="color-color" tabindex="-1">color.Color <a class="header-anchor" href="#color-color" aria-label="Permalink to &quot;color.Color&quot;">​</a></h3><p><strong>Kind</strong>: instance class of <a href="#Color"><code>Color</code></a><br><a name="new_Color+Color_new"></a></p><h4 id="new-exports-color-colorstr" tabindex="-1">new exports.Color(colorStr) <a class="header-anchor" href="#new-exports-color-colorstr" aria-label="Permalink to &quot;new exports.Color(colorStr)&quot;">​</a></h4><p><strong>Throws</strong>:</p><ul><li><code>Error</code> if the colorStr is not a string</li></ul><table tabindex="0"><thead><tr><th>Param</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>colorStr</td><td><code>string</code></td><td>a string representation of the color</td></tr></tbody></table><p><a name="toString"></a></p><h2 id="tostring-⇒-string" tabindex="-1">toString() ⇒ <code>string</code> <a class="header-anchor" href="#tostring-⇒-string" aria-label="Permalink to &quot;toString() ⇒ &lt;code&gt;string&lt;/code&gt;&quot;">​</a></h2><p>Returns the colorStr property</p><p><strong>Kind</strong>: global function</p>',20)])])}const C=r(l,[["render",n]]);export{u as __pageData,C as default};
