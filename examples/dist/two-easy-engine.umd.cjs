(function(n,o){typeof exports=="object"&&typeof module<"u"?o(exports):typeof define=="function"&&define.amd?define(["exports"],o):(n=typeof globalThis<"u"?globalThis:n||self,o(n.TwoEasyEngine={}))})(this,(function(n){"use strict";class o{constructor(e=0,t=0){if(typeof e!="number"||typeof t!="number")throw new Error("x and y must be numbers");this.x=e,this.y=t}clone(){return new o(this.x,this.y)}set(e,t){if(typeof e!="number"||typeof t!="number")throw new Error("x and y must be numbers");this.x=e,this.y=t}translate(e,t){if(typeof e!="number"||typeof t!="number")throw new Error("dx and dy must be numbers");this.x+=e,this.y+=t}add(e){if(!(e instanceof o))throw new Error("v must be of type Vector2");this.x+=e.x,this.y+=e.y}subtract(e){if(!(e instanceof o))throw new Error("v must be of type Vector2");this.x-=e.x,this.y-=e.y}dot(e){if(!(e instanceof o))throw new Error("v must be of type Vector2");return this.x*e.x+this.y*e.y}vectorTo(e){if(!(e instanceof o))throw new Error("v must be of type Vector2");return new o(e.x-this.x,e.y-this.y)}multiplyScalar(e){if(typeof e!="number")throw new Error("scalar must be a number");this.x*=e,this.y*=e}divideScalar(e){if(typeof e!="number")throw new Error("scalar must be a number");if(e===0)throw new Error("Division by zero");this.x/=e,this.y/=e}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}normalize(){const e=this.length();if(e===0)throw new Error("Cannot normalize zero-length vector");this.divideScalar(e)}}class l{constructor(e=new o,t=0,r=new o(1,1)){if(!(e instanceof o))throw new Error("position must be of type Vector2");if(typeof t!="number")throw new Error("rotation must be a number");if(!(r instanceof o))throw new Error("scale must be of type Vector2");this.position=e,this.rotation=t,this.scale=r}}class y{constructor(e={zoom:1}){const{zoom:t}=e;if(typeof t!="number")throw new Error("options.zoom must be a number");this.zoom=t,this.transform=new l}apply(e){if(!(e instanceof CanvasRenderingContext2D))throw new Error("ctx must be of type CanvasRenderingContext2D");e.save(),e.scale(this.zoom,this.zoom),e.rotate(-this.transform.rotation),e.translate(-this.transform.position.x,-this.transform.position.y)}restore(e){if(!(e instanceof CanvasRenderingContext2D))throw new Error("ctx must be of type CanvasRenderingContext2D");e.restore()}}class w{constructor(){this.transform=new l}onRender(e){if(!(e instanceof CanvasRenderingContext2D))throw new Error("ctx must be of type CanvasRenderingContext2D")}}class b{constructor(){this.children=[]}add(e){if(!(e instanceof w))throw new Error("child must be of type Object2D");this.children.push(e)}remove(e){if(!(e instanceof w))throw new Error("child must be of type Object2D");const t=this.children.indexOf(e);t!==-1&&this.children.splice(t,1)}render(e){if(!(e instanceof CanvasRenderingContext2D))throw new Error("ctx must be of type CanvasRenderingContext2D");this.children.forEach(t=>t.onRender(e))}}class p{constructor(e,t,r,i={width:window.innerWidth,height:window.innerHeight,devicePixelRatio:window.devicePixelRatio||1,backgroundColor:"transparent"}){const{width:f,height:a,devicePixelRatio:h}=i;if(!(e instanceof HTMLCanvasElement))throw new Error("canvas must be of type HTMLCanvasElement");if(!(t instanceof b))throw new Error("scene must be of type Scene");if(!(r instanceof y))throw new Error("camera must be of type Camera");if(typeof f!="number"||typeof a!="number")throw new Error("width and height must be numbers");if(typeof h!="number")throw new Error("devicePixelRatio must be a number");this.canvas=e,this.ctx=e.getContext("2d"),this.scene=t,this.camera=r,this.options=i,this.recalculateDevicePixelRatio()}setSize(e,t){if(typeof e!="number"||typeof t!="number")throw new Error("width and height must be numbers");this.options.width=e,this.options.height=t,this.recalculateDevicePixelRatio()}setDevicePixelRatio(e){if(typeof e!="number")throw new Error("dpr must be a number");this.options.devicePixelRatio=e,this.recalculateDevicePixelRatio()}recalculateDevicePixelRatio(){const e=this.options.devicePixelRatio||1,t=this.options.width*e,r=this.options.height*e;this.canvas.width=t,this.canvas.height=r,this.ctx.scale(e,e)}render(){const e=this.ctx;e.clearRect(0,0,this.canvas.width,this.canvas.height),e.fillStyle=this.options.backgroundColor||"transparent",e.fillRect(0,0,this.canvas.width,this.canvas.height),this.camera.apply(e),this.scene.render(e),this.camera.restore(e)}requestAnimationFrame(e={beforeRender:null,afterRender:null}){const{beforeRender:t,afterRender:r}=e;if(t&&typeof t!="function")throw new Error("beforeRender must be a function");if(r&&typeof r!="function")throw new Error("afterRender must be a function");function i(){t&&t(),this.render(),r&&r(),window.requestAnimationFrame(i.bind(this))}window.requestAnimationFrame(i.bind(this))}}class u{constructor(e={fillStyle:null,strokeStyle:null,lineWidth:null}){const{fillStyle:t=null,strokeStyle:r=null,lineWidth:i=1}=e;if(t!==null&&typeof t!="string")throw new Error("fillStyle must be a string or null");if(r!==null&&typeof r!="string")throw new Error("strokeStyle must be a string or null");if(i!==null&&(typeof i!="number"||i<=0))throw new Error("lineWidth must be a positive number or null");this.fillStyle=e.fillStyle,this.strokeStyle=e.strokeStyle,this.lineWidth=e.lineWidth}}class m{draw(e,t,r){throw e instanceof CanvasRenderingContext2D?r instanceof u?t instanceof l?new Error("draw method must be implemented in subclass"):new Error("transform must be of type Transform"):new Error("material must be of type Material"):new Error("ctx must be of type CanvasRenderingContext2D")}}class E extends m{constructor(e,t){if(super(),typeof e!="number"||e<=0)throw new Error("width must be a positive number");if(typeof t!="number"||t<=0)throw new Error("height must be a positive number");this.width=e,this.height=t}draw(e,t,r){if(!(e instanceof CanvasRenderingContext2D))throw new Error("ctx must be of type CanvasRenderingContext2D");if(!(r instanceof u))throw new Error("material must be of type Material");if(!(t instanceof l))throw new Error("transform must be of type Transform");const{position:i,scale:f}=t,{x:a,y:h}=i,c=this.width*f.x,d=this.height*f.y;e.save(),e.translate(a+c/2,h+d/2),e.rotate(t.rotation),e.translate(-(a+c/2),-(h+d/2)),r.fillStyle&&(e.fillStyle=r.fillStyle,e.fillRect(a,h,c,d)),r.strokeStyle&&(e.strokeStyle=r.strokeStyle,e.lineWidth=r.lineWidth,e.strokeRect(a,h,c,d)),e.restore()}}class R extends m{constructor(e){if(super(),typeof e!="number"||e<=0)throw new Error("radius must be a positive number");this.radius=e}draw(e,t,r){if(!(e instanceof CanvasRenderingContext2D))throw new Error("ctx must be of type CanvasRenderingContext2D");if(!(r instanceof u))throw new Error("material must be of type Material");if(!(t instanceof l))throw new Error("transform must be of type Transform");const{position:i,scale:f}=t,{x:a,y:h}=i,c=this.radius*((f.x+f.y)/2);e.beginPath(),e.arc(a,h,c,0,Math.PI*2),e.closePath(),r.fillStyle&&(e.fillStyle=r.fillStyle,e.fill()),r.strokeStyle&&(e.strokeStyle=r.strokeStyle,e.lineWidth=r.lineWidth,e.stroke())}}class g extends w{constructor(e,t){if(super(),!(e instanceof m))throw new Error("geometry must be of type Geometry");if(!(t instanceof u))throw new Error("material must be of type Material");this.geometry=e,this.material=t}onRender(e){super.onRender(e),this.geometry.draw(e,this.transform,this.material)}}n.Camera2D=y,n.CircleGeometry=R,n.Geometry=m,n.Material=u,n.Mesh=g,n.Object2D=w,n.RectGeometry=E,n.Render2D=p,n.Scene=b,n.Transform=l,n.Vector2=o,Object.defineProperty(n,Symbol.toStringTag,{value:"Module"})}));
